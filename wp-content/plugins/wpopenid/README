1. Installing the WPOpenID plugin, and the JanRain PHP OpenID library

Like any Wordpress plugin, the wpopenid directory needs to be copied into Wordpress'
wp-content/plugins/ directory. The JanRain PHP OpenID library is included in the
plugin zip or tgz archive, and shouldn't require any additional installation.

An example directory structure with the library installed in the plugin directory:

 blog/
   wp-content/
     plugins/
       wpopenid/
         README
         openid-registration.php
         user-interface.php
         images/
            openid.gif
         Auth/
           OpenID.php
           OpenID/
             Consumer.php ...
         Services/
           Yadis/
             Yadis.php ...


2. Modifying theme's comments.php for better styles

If a blog requires registration & login before accepting comments, then comments.php displays a
link to the login form. Augment it with a quick and easy OpenID login form.

If a blog permits anonymous commenting, the plugin tries to modify the form to include
an OpenID field, and then wrap the anonymous text fields with semantically valid markup
indicating a choice between OpenID and Anonymous comments. You can turn this feature off
in the OpenID Options pane, and modify your templates yourself. Here is part of the
modified comments.php from the default Kubrick theme.



<?php if ( get_option('comment_registration') && !$user_ID ) : ?>
<p>You must be <a href="<?php echo get_option('siteurl'); ?>/wp-login.php?redirect_to=<?php the_permalink(); ?>">logged in</a> to post a comment.</p>

<form method="post" action="<?php echo get_option('siteurl'); ?>/wp-login.php?redirect_to=<?php the_permalink(); ?>#respond">
 <p><label for="openid_url_comment_form">You can login with your OpenID!</label><br/>
 <input style="background: url(<?php echo OPENIDIMAGE; ?>) no-repeat;
 background-position: 0 50%; padding-left: 18px;" type="text" name="openid_url" tabindex="6" id="openid_url_comment_form" size="22" />
 <input name="submit" type="submit" value="Login" /></p>
</form>

<?php else : ?>

<form action="<?php echo get_option('siteurl'); ?>/wp-comments-post.php" method="post" id="commentform">

<?php if ( $user_ID ) : ?>

<p>Logged in as <a href="<?php echo get_option('siteurl'); ?>/wp-admin/profile.php"><?php echo $user_identity; ?></a>.
<a href="<?php echo get_option('siteurl'); ?>/wp-login.php?action=logout" title="Log out of this account">Logout &raquo;</a></p>

<?php else : ?>


<h3>Login Method</h3>
<dl><dt>OpenID</dt>
<dd><p>

<input type="text" name="openid_url" id="openid_url_comment_form" size="22" tabindex="0"/>
<label for="openid_url_comment_form"><small>OpenID Identity</small></label>

</p></dd>

<dt>Anonymous</dt>
<dd>

<p><input type="text" name="author" id="author" value="<?php echo $comment_author; ?>" size="22" tabindex="1" />
<label for="author"><small>Name <?php if ($req) echo "(required)"; ?></small></label></p>

<p><input type="text" name="email" id="email" value="<?php echo $comment_author_email; ?>" size="22" tabindex="2" />
<label for="email"><small>Mail (will not be published) <?php if ($req) echo "(required)"; ?></small></label></p>

<p><input type="text" name="url" id="url" value="<?php echo $comment_author_url; ?>" size="22" tabindex="3" />
<label for="url"><small>Website</small></label></p>

</dd></dl>

<?php endif; ?>


3. Useful hooks

Provided are get_comments_openid() & is_comment_openid().
